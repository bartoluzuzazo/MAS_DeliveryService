// <auto-generated />
using System;
using MAS_DeliveryService.Api.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MAS_DeliveryService.Api.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Clients.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1036d298-8b4c-4391-ab44-e0c54d4799aa"),
                            Email = "marston@gmail.com",
                            PersonId = new Guid("7db63b89-de37-4d77-8460-bb12cb8a5ec7")
                        },
                        new
                        {
                            Id = new Guid("caafbfab-ce64-433a-bd37-d68169df1fa3"),
                            Email = "fisher@gmail.com",
                            PersonId = new Guid("9126d66b-f694-4a9e-895b-6691be413b2d")
                        });
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Deliveries.Delivery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourierId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("CourierId", "OrderId")
                        .IsUnique();

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.DriversLicenses.DriversLicense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourierId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateIssued")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CourierId");

                    b.ToTable("DriversLicenses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9c69e34-35ee-4a11-bb40-e63d590a9b11"),
                            Categories = "[5]",
                            CourierId = new Guid("a781d2be-b7fb-41c5-a7d7-b5907767485a"),
                            DateIssued = new DateTime(2024, 6, 16, 16, 2, 8, 421, DateTimeKind.Local).AddTicks(5607)
                        });
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Items.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af584438-575e-4c97-b429-128f72c2469c"),
                            Name = "Asbestos",
                            Weight = 10.0m
                        },
                        new
                        {
                            Id = new Guid("b97aac37-3e37-418b-bd84-b4a7c222b3fe"),
                            Name = "Bricks",
                            Weight = 34.7m
                        },
                        new
                        {
                            Id = new Guid("51568137-dabd-437f-aca0-55d5176e44ca"),
                            Name = "Pen",
                            Weight = 0.1m
                        },
                        new
                        {
                            Id = new Guid("0cbb1178-ff27-4e05-a01b-94ebcd75a1b1"),
                            Name = "Water bottle",
                            Weight = 1.0m
                        });
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.OrderItems.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ItemId", "OrderId")
                        .IsUnique();

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("53bb5537-14a5-450f-885d-e6234d84196a"),
                            ItemId = new Guid("af584438-575e-4c97-b429-128f72c2469c"),
                            OrderId = new Guid("19570230-fdad-4916-9159-7ca79ea13386")
                        },
                        new
                        {
                            Id = new Guid("8b973796-44e7-49d5-909c-f8b33df8fdd2"),
                            ItemId = new Guid("b97aac37-3e37-418b-bd84-b4a7c222b3fe"),
                            OrderId = new Guid("19570230-fdad-4916-9159-7ca79ea13386")
                        },
                        new
                        {
                            Id = new Guid("1710c85a-f034-4cf6-802d-085257631fb5"),
                            ItemId = new Guid("0cbb1178-ff27-4e05-a01b-94ebcd75a1b1"),
                            OrderId = new Guid("19570230-fdad-4916-9159-7ca79ea13386")
                        },
                        new
                        {
                            Id = new Guid("e0e991ff-cd16-4b88-bd93-ffe0d9361d82"),
                            ItemId = new Guid("0cbb1178-ff27-4e05-a01b-94ebcd75a1b1"),
                            OrderId = new Guid("0f1d73b7-fbdb-4b11-8e42-60f8b6864935")
                        },
                        new
                        {
                            Id = new Guid("e45d0d0b-5399-4d6e-9688-ee6dcd250b32"),
                            ItemId = new Guid("51568137-dabd-437f-aca0-55d5176e44ca"),
                            OrderId = new Guid("0f1d73b7-fbdb-4b11-8e42-60f8b6864935")
                        });
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Orders.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DeliveryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DeliveryId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("19570230-fdad-4916-9159-7ca79ea13386"),
                            ClientId = new Guid("1036d298-8b4c-4391-ab44-e0c54d4799aa"),
                            Destination = "Example 87, Warsaw, Poland",
                            IsCancelled = false,
                            Sender = "Building Company"
                        },
                        new
                        {
                            Id = new Guid("0f1d73b7-fbdb-4b11-8e42-60f8b6864935"),
                            ClientId = new Guid("caafbfab-ce64-433a-bd37-d68169df1fa3"),
                            Destination = "Example 32, Warsaw, Poland",
                            IsCancelled = false,
                            Sender = "Amazon.com"
                        });
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.PackageItems.PackageItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.HasIndex("ItemId", "PackageId")
                        .IsUnique();

                    b.ToTable("PackageItems");
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Packages.Package", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DeliveredInId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SentInId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeliveredInId");

                    b.HasIndex("SentInId");

                    b.HasIndex("SerialNumber")
                        .IsUnique();

                    b.ToTable("Package");
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.People.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("WorkerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("WorkerId");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = new Guid("05be6fca-8704-4155-8e13-71b3ee56cc51"),
                            FirstName = "Jan",
                            LastName = "Kowalski",
                            Number = "555666555"
                        },
                        new
                        {
                            Id = new Guid("dcf7afb1-adf7-4f16-ad38-dc5f2b214279"),
                            FirstName = "Nathan",
                            LastName = "Drake",
                            Number = "444555666"
                        },
                        new
                        {
                            Id = new Guid("7db63b89-de37-4d77-8460-bb12cb8a5ec7"),
                            FirstName = "John",
                            LastName = "Marston",
                            Number = "555444555"
                        },
                        new
                        {
                            Id = new Guid("9126d66b-f694-4a9e-895b-6691be413b2d"),
                            FirstName = "Sam",
                            LastName = "Fisher",
                            Number = "111222333"
                        });
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Static.Static", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MaxWeight")
                        .HasColumnType("TEXT");

                    b.Property<int>("YearlyVacationDays")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Static");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae9513bd-965f-49fa-a075-f42fa3482eb7"),
                            MaxWeight = 35.0m,
                            YearlyVacationDays = 21
                        });
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Workers.Worker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<int>("Discriminator")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("MonthlySalary")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SalaryPerHour")
                        .HasColumnType("TEXT");

                    b.Property<int?>("VacationDaysLeft")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Worker");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Couriers.Courier", b =>
                {
                    b.HasBaseType("MAS_DeliveryService.Api.Domain.Workers.Worker");

                    b.Property<Guid?>("DriversLicenseId")
                        .HasColumnType("TEXT");

                    b.HasIndex("DriversLicenseId");

                    b.ToTable("Courier");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a781d2be-b7fb-41c5-a7d7-b5907767485a"),
                            DateOfBirth = new DateTime(2024, 6, 16, 16, 2, 8, 421, DateTimeKind.Local).AddTicks(4854),
                            Discriminator = 0,
                            PersonId = new Guid("05be6fca-8704-4155-8e13-71b3ee56cc51"),
                            SalaryPerHour = 30.0m
                        },
                        new
                        {
                            Id = new Guid("11be6353-09b3-433f-99f8-564ab4baa433"),
                            DateOfBirth = new DateTime(2024, 6, 16, 16, 2, 8, 421, DateTimeKind.Local).AddTicks(4920),
                            Discriminator = 1,
                            MonthlySalary = 5000.0m,
                            PersonId = new Guid("9126d66b-f694-4a9e-895b-6691be413b2d"),
                            VacationDaysLeft = 0
                        });
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Managers.Manager", b =>
                {
                    b.HasBaseType("MAS_DeliveryService.Api.Domain.Workers.Worker");

                    b.Property<string>("Education")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Manager");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2e2a8832-9b41-4651-bb6e-b889281bc89b"),
                            DateOfBirth = new DateTime(2024, 6, 16, 16, 2, 8, 421, DateTimeKind.Local).AddTicks(5299),
                            Discriminator = 1,
                            MonthlySalary = 3500.0m,
                            PersonId = new Guid("dcf7afb1-adf7-4f16-ad38-dc5f2b214279"),
                            VacationDaysLeft = 0,
                            Education = "Harvard"
                        });
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Clients.Client", b =>
                {
                    b.HasOne("MAS_DeliveryService.Api.Domain.People.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Deliveries.Delivery", b =>
                {
                    b.HasOne("MAS_DeliveryService.Api.Domain.Couriers.Courier", "Courier")
                        .WithMany("Deliveries")
                        .HasForeignKey("CourierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAS_DeliveryService.Api.Domain.Orders.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courier");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.DriversLicenses.DriversLicense", b =>
                {
                    b.HasOne("MAS_DeliveryService.Api.Domain.Couriers.Courier", "Courier")
                        .WithMany()
                        .HasForeignKey("CourierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courier");
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.OrderItems.OrderItem", b =>
                {
                    b.HasOne("MAS_DeliveryService.Api.Domain.Items.Item", "Item")
                        .WithMany("OrderItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAS_DeliveryService.Api.Domain.Orders.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Orders.Order", b =>
                {
                    b.HasOne("MAS_DeliveryService.Api.Domain.Clients.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAS_DeliveryService.Api.Domain.Deliveries.Delivery", "Delivery")
                        .WithMany()
                        .HasForeignKey("DeliveryId");

                    b.Navigation("Client");

                    b.Navigation("Delivery");
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.PackageItems.PackageItem", b =>
                {
                    b.HasOne("MAS_DeliveryService.Api.Domain.Items.Item", "Item")
                        .WithMany("PackageItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MAS_DeliveryService.Api.Domain.Packages.Package", "Package")
                        .WithMany("PackageItems")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Packages.Package", b =>
                {
                    b.HasOne("MAS_DeliveryService.Api.Domain.Orders.Order", "DeliveredIn")
                        .WithMany("DeliveredIn")
                        .HasForeignKey("DeliveredInId");

                    b.HasOne("MAS_DeliveryService.Api.Domain.Orders.Order", "SentIn")
                        .WithMany("SentIn")
                        .HasForeignKey("SentInId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveredIn");

                    b.Navigation("SentIn");
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.People.Person", b =>
                {
                    b.HasOne("MAS_DeliveryService.Api.Domain.Clients.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("MAS_DeliveryService.Api.Domain.Workers.Worker", "Worker")
                        .WithMany()
                        .HasForeignKey("WorkerId");

                    b.Navigation("Client");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Workers.Worker", b =>
                {
                    b.HasOne("MAS_DeliveryService.Api.Domain.People.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Couriers.Courier", b =>
                {
                    b.HasOne("MAS_DeliveryService.Api.Domain.DriversLicenses.DriversLicense", "DriversLicense")
                        .WithMany()
                        .HasForeignKey("DriversLicenseId");

                    b.HasOne("MAS_DeliveryService.Api.Domain.Workers.Worker", null)
                        .WithOne()
                        .HasForeignKey("MAS_DeliveryService.Api.Domain.Couriers.Courier", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DriversLicense");
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Managers.Manager", b =>
                {
                    b.HasOne("MAS_DeliveryService.Api.Domain.Workers.Worker", null)
                        .WithOne()
                        .HasForeignKey("MAS_DeliveryService.Api.Domain.Managers.Manager", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Clients.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Items.Item", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("PackageItems");
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Orders.Order", b =>
                {
                    b.Navigation("DeliveredIn");

                    b.Navigation("OrderItems");

                    b.Navigation("SentIn");
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Packages.Package", b =>
                {
                    b.Navigation("PackageItems");
                });

            modelBuilder.Entity("MAS_DeliveryService.Api.Domain.Couriers.Courier", b =>
                {
                    b.Navigation("Deliveries");
                });
#pragma warning restore 612, 618
        }
    }
}
